docker:
  => docker 
  will list most of the commands and sub-commands

docker container run:
  => docker contianer run [OPTIONS] IMAGE [COMMAND] [ARG...]:
  => docker container run --detach --publish 80:80 --name "name-of-the-container" nginx
  => What happens in the background--
    ==> Looks for the image locally in the image cache
    ==> If image not available in the local cache then check in the image repository (efault - Docker Hub)
    ==> Download the image
    ==> Create a new container based on that image and prepares to start
    ==> Give it a virtual IP on a provate networ inside docker engine
    ==> opens up the port
    ==> starts container by using the CMD in the Dockerfile

docker container ls:
  => docker container ls
  => docker container ls -a

docker container top:
  => docker container top <name-of-the-container"
  
docker container rm:
  => docker container rm <container-name>
  => docker container rm <container-id>
  => docker container rm -f 

docker ps:
  => Old command to list the containers

===>>> Networking Related <<<====
docker network ls:
  => show networks  

docker network create --driver:
  => create a network

docker container port <container-name>:
  => list the port details

docker contianer inspect --format '{{ .NetworkSettings.IPAddress }}' <container-name>:
  => inspect the container network

docker network connect:
  => attach a network to a container

docker network disconnect:
  =>detach a network from a container

docker container run -d --network <net-name> --net-alias <alias-name> <image-name>:
  => gives the net alias to the container which we could use it later:
    => docker container run --rm --net <net-name> <image-name> nslookup <alias-name>

docker image history <image-name>:
  => shows the history of images and its layers. Each layer has its own sha hash value

docker image inspect <image-name>:
  => gives the image metadata

docker image tag <source-image-name>[:tag] <target-image-name>[:tag]:
  => gives a tag to the image
  => example: docker image tag nginx rsaxena/my-nginx  

docker login:
  => to login to your hub account  
  => stores the authentication key in the ".docker/config.json"